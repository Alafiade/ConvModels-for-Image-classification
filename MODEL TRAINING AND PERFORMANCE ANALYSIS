{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Alafiade/ConvModels-for-Image-classification/blob/main/MODEL%20TRAINIG%20AND%20PERFORMANCE%20ANALYSIS%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "3i8qYrxtmEY-"
      },
      "outputs": [],
      "source": [
        "import torch\n",
        "import torch.nn as nn\n",
        "from torch.optim import lr_scheduler\n",
        "import torch.optim as optim\n",
        "import torchvision\n",
        "from torchvision import datasets, models, transforms\n",
        "import matplotlib.pyplot as plt\n",
        "import time\n",
        "import os\n",
        "from PIL import Image\n",
        "from tempfile import TemporaryDirectory\n",
        "plt.ion()\n",
        "import torch.optim as optim\n",
        "import numpy as np"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7wkYtnWznIIO",
        "outputId": "f5249cc9-36b2-464c-a08f-b656c98e5e00"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Dataset URL: https://www.kaggle.com/datasets/aryashah2k/breast-ultrasound-images-dataset\n",
            "License(s): CC0-1.0\n",
            "Downloading breast-ultrasound-images-dataset.zip to /content\n",
            " 99% 193M/195M [00:09<00:00, 25.0MB/s]\n",
            "100% 195M/195M [00:09<00:00, 21.3MB/s]\n"
          ]
        }
      ],
      "source": [
        "!kaggle datasets download -d aryashah2k/breast-ultrasound-images-dataset"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pSHDoqapnog1",
        "outputId": "f15981ae-8857-4441-a9be-69730df4fd0e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Archive:  breast.zip\n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (1).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (1)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (10).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (10)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (100).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (100)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (100)_mask_1.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (101).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (101)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (102).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (102)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (103).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (103)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (104).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (104)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (105).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (105)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (106).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (106)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (107).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (107)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (108).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (108)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (109).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (109)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (11).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (11)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (110).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (110)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (111).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (111)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (112).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (112)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (113).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (113)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (114).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (114)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (115).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (115)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (116).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (116)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (117).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (117)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (118).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (118)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (119).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (119)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (12).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (12)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (120).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (120)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (121).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (121)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (122).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (122)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (123).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (123)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (124).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (124)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (125).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (125)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (126).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (126)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (127).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (127)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (128).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (128)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (129).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (129)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (13).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (13)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (130).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (130)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (131).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (131)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (132).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (132)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (133).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (133)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (134).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (134)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (135).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (135)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (136).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (136)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (137).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (137)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (138).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (138)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (139).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (139)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (14).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (14)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (140).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (140)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (141).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (141)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (142).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (142)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (143).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (143)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (144).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (144)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (145).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (145)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (146).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (146)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (147).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (147)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (148).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (148)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (149).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (149)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (15).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (15)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (150).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (150)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (151).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (151)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (152).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (152)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (153).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (153)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (154).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (154)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (155).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (155)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (156).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (156)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (157).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (157)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (158).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (158)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (159).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (159)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (16).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (16)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (160).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (160)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (161).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (161)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (162).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (162)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (163).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (163)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (163)_mask_1.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (164).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (164)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (165).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (165)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (166).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (166)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (167).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (167)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (168).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (168)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (169).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (169)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (17).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (17)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (170).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (170)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (171).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (171)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (172).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (172)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (173).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (173)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (173)_mask_1.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (174).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (174)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (175).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (175)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (176).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (176)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (177).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (177)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (178).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (178)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (179).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (179)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (18).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (18)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (180).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (180)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (181).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (181)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (181)_mask_1.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (182).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (182)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (183).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (183)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (184).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (184)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (185).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (185)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (186).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (186)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (187).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (187)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (188).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (188)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (189).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (189)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (19).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (19)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (190).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (190)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (191).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (191)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (192).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (192)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (193).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (193)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (194).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (194)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (195).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (195)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (195)_mask_1.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (195)_mask_2.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (196).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (196)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (197).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (197)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (198).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (198)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (199).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (199)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (2).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (2)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (20).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (20)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (200).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (200)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (201).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (201)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (202).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (202)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (203).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (203)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (204).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (204)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (205).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (205)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (206).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (206)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (207).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (207)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (208).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (208)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (209).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (209)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (21).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (21)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (210).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (210)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (211).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (211)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (212).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (212)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (213).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (213)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (214).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (214)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (215).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (215)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (216).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (216)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (217).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (217)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (218).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (218)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (219).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (219)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (22).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (22)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (220).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (220)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (221).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (221)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (222).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (222)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (223).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (223)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (224).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (224)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (225).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (225)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (226).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (226)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (227).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (227)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (228).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (228)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (229).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (229)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (23).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (23)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (230).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (230)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (231).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (231)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (232).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (232)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (233).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (233)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (234).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (234)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (235).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (235)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (236).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (236)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (237).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (237)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (238).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (238)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (239).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (239)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (24).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (24)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (240).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (240)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (241).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (241)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (242).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (242)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (243).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (243)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (244).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (244)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (245).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (245)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (246).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (246)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (247).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (247)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (248).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (248)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (249).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (249)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (25).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (25)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (25)_mask_1.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (250).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (250)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (251).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (251)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (252).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (252)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (253).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (253)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (254).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (254)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (255).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (255)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (256).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (256)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (257).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (257)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (258).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (258)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (259).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (259)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (26).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (26)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (260).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (260)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (261).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (261)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (262).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (262)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (263).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (263)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (264).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (264)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (265).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (265)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (266).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (266)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (267).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (267)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (268).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (268)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (269).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (269)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (27).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (27)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (270).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (270)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (271).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (271)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (272).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (272)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (273).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (273)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (274).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (274)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (275).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (275)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (276).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (276)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (277).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (277)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (278).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (278)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (279).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (279)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (28).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (28)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (280).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (280)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (281).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (281)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (282).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (282)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (283).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (283)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (284).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (284)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (285).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (285)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (286).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (286)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (287).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (287)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (288).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (288)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (289).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (289)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (29).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (29)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (290).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (290)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (291).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (291)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (292).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (292)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (293).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (293)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (294).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (294)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (295).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (295)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (296).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (296)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (297).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (297)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (298).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (298)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (299).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (299)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (3).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (3)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (30).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (30)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (300).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (300)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (301).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (301)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (302).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (302)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (303).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (303)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (304).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (304)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (305).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (305)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (306).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (306)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (307).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (307)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (308).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (308)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (309).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (309)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (31).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (31)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (310).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (310)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (311).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (311)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (312).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (312)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (313).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (313)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (314).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (314)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (315).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (315)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (315)_mask_1.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (316).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (316)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (317).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (317)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (318).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (318)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (319).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (319)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (32).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (32)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (320).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (320)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (321).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (321)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (322).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (322)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (323).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (323)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (324).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (324)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (325).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (325)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (326).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (326)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (327).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (327)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (328).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (328)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (329).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (329)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (33).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (33)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (330).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (330)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (331).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (331)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (332).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (332)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (333).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (333)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (334).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (334)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (335).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (335)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (336).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (336)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (337).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (337)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (338).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (338)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (339).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (339)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (34).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (34)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (340).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (340)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (341).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (341)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (342).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (342)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (343).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (343)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (344).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (344)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (345).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (345)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (346).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (346)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (346)_mask_1.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (347).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (347)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (348).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (348)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (349).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (349)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (35).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (35)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (350).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (350)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (351).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (351)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (352).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (352)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (353).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (353)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (354).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (354)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (355).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (355)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (356).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (356)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (357).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (357)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (358).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (358)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (359).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (359)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (36).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (36)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (360).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (360)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (361).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (361)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (362).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (362)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (363).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (363)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (364).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (364)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (365).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (365)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (366).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (366)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (367).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (367)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (368).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (368)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (369).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (369)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (37).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (37)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (370).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (370)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (371).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (371)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (372).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (372)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (373).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (373)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (374).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (374)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (375).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (375)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (376).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (376)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (377).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (377)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (378).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (378)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (379).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (379)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (38).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (38)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (380).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (380)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (381).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (381)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (382).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (382)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (383).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (383)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (384).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (384)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (385).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (385)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (386).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (386)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (387).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (387)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (388).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (388)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (389).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (389)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (39).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (39)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (390).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (390)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (391).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (391)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (392).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (392)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (393).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (393)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (394).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (394)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (395).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (395)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (396).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (396)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (397).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (397)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (398).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (398)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (399).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (399)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (4).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (4)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (4)_mask_1.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (40).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (40)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (400).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (400)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (401).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (401)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (402).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (402)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (403).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (403)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (404).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (404)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (405).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (405)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (406).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (406)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (407).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (407)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (408).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (408)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (409).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (409)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (41).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (41)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (410).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (410)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (411).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (411)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (412).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (412)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (413).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (413)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (414).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (414)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (415).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (415)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (416).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (416)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (417).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (417)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (418).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (418)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (419).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (419)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (42).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (42)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (420).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (420)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (421).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (421)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (422).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (422)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (423).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (423)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (424).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (424)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (424)_mask_1.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (425).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (425)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (426).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (426)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (427).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (427)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (428).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (428)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (429).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (429)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (43).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (43)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (430).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (430)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (431).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (431)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (432).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (432)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (433).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (433)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (434).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (434)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (435).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (435)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (436).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (436)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (437).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (437)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (44).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (44)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (45).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (45)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (46).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (46)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (47).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (47)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (48).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (48)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (49).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (49)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (5).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (5)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (50).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (50)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (51).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (51)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (52).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (52)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (53).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (53)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (54).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (54)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (54)_mask_1.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (55).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (55)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (56).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (56)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (57).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (57)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (58).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (58)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (58)_mask_1.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (59).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (59)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (6).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (6)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (60).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (60)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (61).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (61)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (62).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (62)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (63).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (63)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (64).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (64)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (65).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (65)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (66).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (66)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (67).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (67)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (68).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (68)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (69).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (69)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (7).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (7)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (70).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (70)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (71).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (71)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (72).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (72)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (73).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (73)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (74).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (74)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (75).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (75)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (76).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (76)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (77).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (77)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (78).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (78)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (79).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (79)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (8).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (8)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (80).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (80)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (81).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (81)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (82).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (82)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (83).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (83)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (83)_mask_1.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (84).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (84)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (85).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (85)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (86).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (86)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (87).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (87)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (88).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (88)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (89).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (89)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (9).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (9)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (90).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (90)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (91).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (91)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (92).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (92)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (92)_mask_1.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (93).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (93)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (93)_mask_1.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (94).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (94)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (95).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (95)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (96).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (96)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (97).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (97)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (98).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (98)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (98)_mask_1.png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (99).png  \n",
            "  inflating: Dataset_BUSI_with_GT/benign/benign (99)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (1).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (1)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (10).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (10)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (100).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (100)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (101).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (101)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (102).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (102)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (103).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (103)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (104).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (104)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (105).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (105)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (106).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (106)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (107).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (107)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (108).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (108)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (109).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (109)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (11).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (11)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (110).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (110)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (111).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (111)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (112).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (112)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (113).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (113)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (114).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (114)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (115).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (115)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (116).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (116)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (117).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (117)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (118).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (118)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (119).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (119)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (12).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (12)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (120).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (120)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (121).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (121)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (122).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (122)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (123).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (123)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (124).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (124)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (125).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (125)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (126).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (126)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (127).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (127)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (128).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (128)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (129).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (129)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (13).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (13)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (130).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (130)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (131).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (131)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (132).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (132)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (133).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (133)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (134).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (134)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (135).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (135)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (136).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (136)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (137).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (137)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (138).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (138)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (139).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (139)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (14).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (14)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (140).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (140)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (141).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (141)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (142).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (142)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (143).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (143)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (144).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (144)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (145).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (145)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (146).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (146)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (147).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (147)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (148).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (148)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (149).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (149)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (15).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (15)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (150).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (150)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (151).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (151)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (152).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (152)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (153).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (153)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (154).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (154)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (155).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (155)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (156).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (156)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (157).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (157)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (158).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (158)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (159).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (159)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (16).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (16)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (160).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (160)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (161).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (161)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (162).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (162)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (163).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (163)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (164).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (164)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (165).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (165)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (166).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (166)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (167).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (167)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (168).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (168)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (169).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (169)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (17).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (17)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (170).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (170)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (171).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (171)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (172).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (172)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (173).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (173)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (174).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (174)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (175).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (175)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (176).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (176)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (177).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (177)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (178).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (178)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (179).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (179)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (18).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (18)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (180).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (180)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (181).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (181)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (182).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (182)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (183).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (183)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (184).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (184)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (185).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (185)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (186).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (186)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (187).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (187)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (188).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (188)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (189).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (189)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (19).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (19)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (190).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (190)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (191).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (191)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (192).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (192)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (193).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (193)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (194).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (194)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (195).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (195)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (196).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (196)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (197).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (197)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (198).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (198)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (199).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (199)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (2).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (2)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (20).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (20)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (200).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (200)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (201).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (201)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (202).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (202)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (203).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (203)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (204).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (204)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (205).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (205)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (206).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (206)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (207).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (207)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (208).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (208)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (209).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (209)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (21).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (21)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (210).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (210)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (22).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (22)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (23).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (23)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (24).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (24)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (25).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (25)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (26).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (26)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (27).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (27)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (28).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (28)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (29).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (29)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (3).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (3)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (30).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (30)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (31).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (31)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (32).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (32)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (33).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (33)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (34).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (34)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (35).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (35)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (36).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (36)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (37).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (37)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (38).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (38)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (39).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (39)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (4).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (4)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (40).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (40)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (41).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (41)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (42).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (42)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (43).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (43)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (44).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (44)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (45).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (45)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (46).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (46)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (47).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (47)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (48).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (48)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (49).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (49)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (5).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (5)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (50).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (50)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (51).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (51)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (52).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (52)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (53).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (53)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (53)_mask_1.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (54).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (54)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (55).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (55)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (56).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (56)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (57).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (57)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (58).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (58)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (59).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (59)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (6).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (6)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (60).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (60)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (61).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (61)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (62).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (62)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (63).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (63)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (64).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (64)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (65).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (65)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (66).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (66)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (67).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (67)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (68).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (68)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (69).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (69)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (7).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (7)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (70).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (70)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (71).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (71)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (72).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (72)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (73).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (73)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (74).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (74)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (75).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (75)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (76).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (76)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (77).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (77)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (78).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (78)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (79).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (79)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (8).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (8)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (80).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (80)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (81).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (81)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (82).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (82)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (83).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (83)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (84).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (84)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (85).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (85)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (86).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (86)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (87).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (87)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (88).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (88)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (89).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (89)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (9).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (9)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (90).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (90)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (91).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (91)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (92).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (92)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (93).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (93)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (94).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (94)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (95).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (95)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (96).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (96)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (97).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (97)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (98).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (98)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (99).png  \n",
            "  inflating: Dataset_BUSI_with_GT/malignant/malignant (99)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (1).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (1)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (10).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (10)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (100).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (100)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (101).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (101)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (102).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (102)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (103).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (103)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (104).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (104)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (105).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (105)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (106).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (106)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (107).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (107)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (108).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (108)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (109).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (109)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (11).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (11)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (110).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (110)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (111).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (111)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (112).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (112)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (113).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (113)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (114).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (114)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (115).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (115)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (116).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (116)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (117).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (117)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (118).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (118)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (119).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (119)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (12).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (12)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (120).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (120)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (121).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (121)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (122).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (122)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (123).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (123)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (124).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (124)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (125).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (125)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (126).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (126)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (127).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (127)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (128).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (128)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (129).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (129)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (13).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (13)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (130).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (130)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (131).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (131)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (132).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (132)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (133).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (133)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (14).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (14)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (15).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (15)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (16).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (16)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (17).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (17)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (18).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (18)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (19).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (19)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (2).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (2)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (20).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (20)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (21).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (21)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (22).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (22)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (23).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (23)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (24).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (24)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (25).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (25)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (26).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (26)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (27).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (27)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (28).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (28)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (29).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (29)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (3).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (3)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (30).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (30)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (31).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (31)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (32).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (32)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (33).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (33)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (34).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (34)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (35).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (35)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (36).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (36)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (37).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (37)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (38).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (38)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (39).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (39)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (4).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (4)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (40).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (40)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (41).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (41)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (42).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (42)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (43).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (43)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (44).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (44)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (45).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (45)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (46).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (46)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (47).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (47)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (48).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (48)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (49).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (49)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (5).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (5)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (50).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (50)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (51).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (51)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (52).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (52)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (53).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (53)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (54).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (54)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (55).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (55)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (56).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (56)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (57).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (57)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (58).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (58)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (59).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (59)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (6).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (6)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (60).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (60)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (61).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (61)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (62).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (62)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (63).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (63)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (64).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (64)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (65).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (65)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (66).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (66)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (67).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (67)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (68).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (68)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (69).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (69)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (7).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (7)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (70).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (70)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (71).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (71)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (72).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (72)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (73).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (73)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (74).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (74)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (75).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (75)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (76).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (76)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (77).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (77)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (78).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (78)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (79).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (79)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (8).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (8)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (80).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (80)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (81).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (81)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (82).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (82)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (83).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (83)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (84).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (84)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (85).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (85)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (86).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (86)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (87).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (87)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (88).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (88)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (89).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (89)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (9).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (9)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (90).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (90)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (91).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (91)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (92).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (92)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (93).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (93)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (94).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (94)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (95).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (95)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (96).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (96)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (97).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (97)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (98).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (98)_mask.png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (99).png  \n",
            "  inflating: Dataset_BUSI_with_GT/normal/normal (99)_mask.png  \n"
          ]
        }
      ],
      "source": [
        "!unzip breast.zip"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Cia5Kiy0nq3P",
        "outputId": "52091bad-90fe-4b53-a66a-b218f321551a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting split-folders\n",
            "  Downloading split_folders-0.5.1-py3-none-any.whl.metadata (6.2 kB)\n",
            "Downloading split_folders-0.5.1-py3-none-any.whl (8.4 kB)\n",
            "Installing collected packages: split-folders\n",
            "Successfully installed split-folders-0.5.1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Copying files: 1578 files [00:00, 2667.92 files/s]\n"
          ]
        }
      ],
      "source": [
        "!pip install split-folders # Install splitfolders using pip\n",
        "import os\n",
        "import torch\n",
        "import torchvision\n",
        "from torchvision import datasets, transforms, models\n",
        "import torch.utils.data as data\n",
        "import splitfolders # Import splitfolders\n",
        "\n",
        "\n",
        "# Define transformations\n",
        "transform = transforms.Compose([\n",
        "    transforms.RandomResizedCrop(224),\n",
        "    transforms.Resize((224,224)),\n",
        "    transforms.RandomHorizontalFlip(),\n",
        "    transforms.ColorJitter(brightness=0.2, contrast=0.2, saturation=0.2),\n",
        "    transforms.ToTensor(),\n",
        "    transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])\n",
        "])\n",
        "\n",
        "# Define data directories\n",
        "data_dir = \"/content/Dataset_BUSI_with_GT\"  # Replace with the actual path to your data directory\n",
        "output_dir = \"/content/sample_data\" # Define output directory for split data\n",
        "\n",
        "# Split the data into train and val sets using splitfolders\n",
        "# This will create 'train' and 'val' directories inside output_dir\n",
        "splitfolders.ratio(data_dir, output=output_dir, seed=42, ratio=(0.8, 0.2), group_prefix=None)\n",
        "\n",
        "# Update train_dir and val_dir to point to the newly created directories\n",
        "train_dir = os.path.join(output_dir, \"train\")\n",
        "val_dir = os.path.join(output_dir, \"val\")\n",
        "\n",
        "# Create ImageFolder datasets\n",
        "image_datasets = {\n",
        "    'Training': datasets.ImageFolder(train_dir, transform=transform),\n",
        "    'Validation': datasets.ImageFolder(val_dir, transform=transform)\n",
        "}\n",
        "\n",
        "# Create DataLoaders\n",
        "dataloaders = {\n",
        "    x: torch.utils.data.DataLoader(image_datasets[x], batch_size=64, shuffle=True, num_workers=2)\n",
        "    for x in ['Training', 'Validation']\n",
        "}\n",
        "\n",
        "# Get dataset sizes and class names\n",
        "dataset_sizes = {x: len(image_datasets[x]) for x in ['Training', 'Validation']}\n",
        "class_names = image_datasets['Training'].classes\n",
        "\n",
        "# Set device\n",
        "device = torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from torchvision.models import resnet101\n",
        "model =  resnet101(pretrained=True)\n",
        "print(model)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "J7D3qEFqogbo",
        "outputId": "28351c04-ce01-4221-ff70-05cd6dc8cc8e"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet101_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet101_Weights.DEFAULT` to get the most up-to-date weights.\n",
            "  warnings.warn(msg)\n",
            "Downloading: \"https://download.pytorch.org/models/resnet101-63fe2227.pth\" to /root/.cache/torch/hub/checkpoints/resnet101-63fe2227.pth\n",
            "100%|██████████| 171M/171M [00:07<00:00, 24.7MB/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ResNet(\n",
            "  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\n",
            "  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "  (relu): ReLU(inplace=True)\n",
            "  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n",
            "  (layer1): Sequential(\n",
            "    (0): Bottleneck(\n",
            "      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "      (downsample): Sequential(\n",
            "        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      )\n",
            "    )\n",
            "    (1): Bottleneck(\n",
            "      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (2): Bottleneck(\n",
            "      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "  )\n",
            "  (layer2): Sequential(\n",
            "    (0): Bottleneck(\n",
            "      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "      (downsample): Sequential(\n",
            "        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\n",
            "        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      )\n",
            "    )\n",
            "    (1): Bottleneck(\n",
            "      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (2): Bottleneck(\n",
            "      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (3): Bottleneck(\n",
            "      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "  )\n",
            "  (layer3): Sequential(\n",
            "    (0): Bottleneck(\n",
            "      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "      (downsample): Sequential(\n",
            "        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\n",
            "        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      )\n",
            "    )\n",
            "    (1): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (2): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (3): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (4): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (5): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (6): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (7): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (8): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (9): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (10): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (11): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (12): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (13): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (14): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (15): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (16): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (17): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (18): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (19): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (20): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (21): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (22): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "  )\n",
            "  (layer4): Sequential(\n",
            "    (0): Bottleneck(\n",
            "      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "      (downsample): Sequential(\n",
            "        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\n",
            "        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      )\n",
            "    )\n",
            "    (1): Bottleneck(\n",
            "      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "    (2): Bottleneck(\n",
            "      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
            "      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
            "      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "      (relu): ReLU(inplace=True)\n",
            "    )\n",
            "  )\n",
            "  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\n",
            "  (fc): Linear(in_features=2048, out_features=1000, bias=True)\n",
            ")\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import torch.optim as optim\n",
        "optimizer =  optim.SGD(model.fc.parameters(),  lr = 0.001, momentum=0.9, weight_decay=0.1)"
      ],
      "metadata": {
        "id": "iWbwmt1KogW-"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Learning Rate Scheduler"
      ],
      "metadata": {
        "id": "LZRotuBxvya0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from torch.optim.lr_scheduler import StepLR\n",
        "scheduler = StepLR(optimizer, step_size=5, gamma=0.5)"
      ],
      "metadata": {
        "id": "e8okfQfVvxge"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import torch.nn as nn\n",
        "criterion = nn.CrossEntropyLoss()"
      ],
      "metadata": {
        "id": "t9XDIaXFpjQG"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Replacing all Classification Head"
      ],
      "metadata": {
        "id": "4V5_pGi-qZU0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import torch.nn as nn\n",
        "for param in model.parameters():\n",
        "  param.requires_grad = True\n",
        "\n",
        "num_classes = 3"
      ],
      "metadata": {
        "id": "W2EnWx_oqLib"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "torch.nn.Dropout(p=0.5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cuq5add2uOZu",
        "outputId": "fe22af9f-3037-4684-e667-b0c7740202cb"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Dropout(p=0.5, inplace=False)"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def train_model(model, criterion, optimizer, num_epochs=3):\n",
        "    best_model_wts = model.state_dict()\n",
        "    best_acc = 0.0\n",
        "\n",
        "    # Move model to device\n",
        "    model.to(device)\n",
        "\n",
        "    for epoch in range(num_epochs):\n",
        "        print(f'Epoch {epoch+1}/{num_epochs}')\n",
        "        print('-' * 10)\n",
        "\n",
        "        # Each epoch has a training and validation phase\n",
        "        for phase in ['Training', 'Validation']:\n",
        "            if phase == 'Training':\n",
        "                model.train()  # Set model to training mode\n",
        "            else:\n",
        "                model.eval()   # Set model to evaluate mode\n",
        "\n",
        "            running_loss = 0.0\n",
        "            running_corrects = 0\n",
        "\n",
        "            # Iterate over data\n",
        "            for inputs, labels in dataloaders[phase]:\n",
        "                inputs = inputs.to(device)\n",
        "                labels = labels.to(device)\n",
        "\n",
        "\n",
        "\n",
        "                # Zero the parameter gradients\n",
        "                optimizer.zero_grad()\n",
        "\n",
        "                # Forward\n",
        "                with torch.set_grad_enabled(phase == 'Training'):\n",
        "                    outputs = model(inputs)\n",
        "                    _, preds = torch.max(outputs, 1)\n",
        "                    loss = criterion(outputs, labels)\n",
        "\n",
        "                    # Backward + optimize only in training phase\n",
        "                    if phase == 'Training':\n",
        "                        loss.backward()\n",
        "                        optimizer.step()\n",
        "\n",
        "                # Statistics\n",
        "                running_loss += loss.item() * inputs.size(0)\n",
        "                running_corrects += torch.sum(preds == labels.data)\n",
        "\n",
        "            epoch_loss = running_loss / dataset_sizes[phase]\n",
        "            epoch_acc = running_corrects.double() / dataset_sizes[phase]\n",
        "\n",
        "            print(f'{phase} Loss: {epoch_loss:.4f} Acc: {epoch_acc:.4f}')\n",
        "\n",
        "            # Deep copy the model\n",
        "            if phase == 'Validation' and epoch_acc > best_acc: # Changed 'Test' to 'Validation'\n",
        "                best_acc = epoch_acc\n",
        "                best_model_wts = model.state_dict()\n",
        "\n",
        "    # Load best model weights\n",
        "    model.load_state_dict(best_model_wts)\n",
        "    return model\n",
        "\n",
        "# Train the model\n",
        "model = train_model(model, criterion, optimizer, num_epochs=20)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cbzjbC-Qqk-Y",
        "outputId": "74b59c9d-5621-4e4f-a1b8-9dbd8fae11d3"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/20\n",
            "----------\n",
            "Training Loss: 4.8185 Acc: 0.2921\n",
            "Validation Loss: 1.8182 Acc: 0.4969\n",
            "Epoch 2/20\n",
            "----------\n",
            "Training Loss: 1.3570 Acc: 0.5405\n",
            "Validation Loss: 1.8675 Acc: 0.3774\n",
            "Epoch 3/20\n",
            "----------\n",
            "Training Loss: 0.9644 Acc: 0.5794\n",
            "Validation Loss: 0.9474 Acc: 0.5849\n",
            "Epoch 4/20\n",
            "----------\n",
            "Training Loss: 0.8864 Acc: 0.6373\n",
            "Validation Loss: 0.8744 Acc: 0.6509\n",
            "Epoch 5/20\n",
            "----------\n",
            "Training Loss: 0.8418 Acc: 0.6381\n",
            "Validation Loss: 0.7317 Acc: 0.6761\n",
            "Epoch 6/20\n",
            "----------\n",
            "Training Loss: 0.7775 Acc: 0.6659\n",
            "Validation Loss: 0.7859 Acc: 0.6604\n",
            "Epoch 7/20\n",
            "----------\n",
            "Training Loss: 0.7500 Acc: 0.6643\n",
            "Validation Loss: 0.7339 Acc: 0.6698\n",
            "Epoch 8/20\n",
            "----------\n",
            "Training Loss: 0.7289 Acc: 0.6857\n",
            "Validation Loss: 0.7436 Acc: 0.6604\n",
            "Epoch 9/20\n",
            "----------\n",
            "Training Loss: 0.7025 Acc: 0.6865\n",
            "Validation Loss: 0.7260 Acc: 0.6855\n",
            "Epoch 10/20\n",
            "----------\n",
            "Training Loss: 0.7053 Acc: 0.6873\n",
            "Validation Loss: 0.7205 Acc: 0.7138\n",
            "Epoch 11/20\n",
            "----------\n",
            "Training Loss: 0.6957 Acc: 0.6937\n",
            "Validation Loss: 0.6942 Acc: 0.6981\n",
            "Epoch 12/20\n",
            "----------\n",
            "Training Loss: 0.6753 Acc: 0.7071\n",
            "Validation Loss: 0.6667 Acc: 0.7044\n",
            "Epoch 13/20\n",
            "----------\n",
            "Training Loss: 0.6577 Acc: 0.7087\n",
            "Validation Loss: 0.6556 Acc: 0.7170\n",
            "Epoch 14/20\n",
            "----------\n",
            "Training Loss: 0.6835 Acc: 0.6960\n",
            "Validation Loss: 0.6882 Acc: 0.6792\n",
            "Epoch 15/20\n",
            "----------\n",
            "Training Loss: 0.6349 Acc: 0.7294\n",
            "Validation Loss: 0.6254 Acc: 0.7296\n",
            "Epoch 16/20\n",
            "----------\n",
            "Training Loss: 0.6549 Acc: 0.7167\n",
            "Validation Loss: 0.6529 Acc: 0.7233\n",
            "Epoch 17/20\n",
            "----------\n",
            "Training Loss: 0.6382 Acc: 0.7317\n",
            "Validation Loss: 0.6677 Acc: 0.7044\n",
            "Epoch 18/20\n",
            "----------\n",
            "Training Loss: 0.6338 Acc: 0.7111\n",
            "Validation Loss: 0.6213 Acc: 0.7390\n",
            "Epoch 19/20\n",
            "----------\n",
            "Training Loss: 0.6112 Acc: 0.7365\n",
            "Validation Loss: 0.6137 Acc: 0.7390\n",
            "Epoch 20/20\n",
            "----------\n",
            "Training Loss: 0.6108 Acc: 0.7476\n",
            "Validation Loss: 0.6482 Acc: 0.7138\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "train_loss = [4.8185, 1.3570, 0.9644, 0.8864, 0.8418, 0.7775, 0.7500, 0.7289, 0.7025, 0.7053,\n",
        "              0.6957, 0.6753, 0.6577, 0.6835, 0.6349, 0.6549, 0.6382, 0.6338, 0.6112, 0.6108]\n",
        "val_loss = [1.8182, 1.8675, 0.9474, 0.8744, 0.7317, 0.7859, 0.7339, 0.7436, 0.7260, 0.7205,\n",
        "            0.6942, 0.6667, 0.6556, 0.6882, 0.6254, 0.6529, 0.6677, 0.6213, 0.6137, 0.6482]\n",
        "train_acc = [0.2921, 0.5405, 0.5794, 0.6373, 0.6381, 0.6659, 0.6643, 0.6857, 0.6865, 0.6873,\n",
        "             0.6937, 0.7071, 0.7087, 0.6960, 0.7294, 0.7167, 0.7317, 0.7111, 0.7365, 0.7476]\n",
        "val_acc = [0.4969, 0.3774, 0.5849, 0.6509, 0.6761, 0.6604, 0.6698, 0.6604, 0.6855, 0.7138,\n",
        "           0.6981, 0.7044, 0.7170, 0.6792, 0.7296, 0.7233, 0.7044, 0.7390, 0.7390, 0.7138]\n"
      ],
      "metadata": {
        "id": "-Bn-WKDSOjpB"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "epochs = range(1, len(train_loss) + 1)\n",
        "\n",
        "# Plotting Accuracy\n",
        "plt.figure(figsize=(12, 5))\n",
        "plt.subplot(1, 2, 1)\n",
        "plt.plot(epochs, train_acc, label=\"Training Accuracy\", marker=\"o\")\n",
        "plt.plot(epochs, val_acc, label=\"Validation Accuracy\", marker=\"x\")\n",
        "plt.xlabel(\"Epochs\")\n",
        "plt.ylabel(\"Accuracy\")\n",
        "plt.title(\"Training vs Validation Accuracy\")\n",
        "plt.legend()\n",
        "\n",
        "# Plotting Loss\n",
        "plt.subplot(1, 2, 2)\n",
        "plt.plot(epochs, train_loss, label=\"Training Loss\", marker=\"o\")\n",
        "plt.plot(epochs, val_loss, label=\"Validation Loss\", marker=\"x\")\n",
        "plt.xlabel(\"Epochs\")\n",
        "plt.ylabel(\"Loss\")\n",
        "plt.title(\"Training vs Validation Loss\")\n",
        "plt.legend()\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 276
        },
        "id": "R5J_k7MTPlEh",
        "outputId": "035cd644-ba22-47e8-930a-2f472c01cbaa"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x500 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ],
  "metadata": {
    "accelerator": "GPU",
    "colab": {
      "gpuType": "T4",
      "provenance": [],
      "authorship_tag": "ABX9TyOaKtat8H48Qj9v92QHQz7s",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
